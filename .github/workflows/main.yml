# This is a basic workflow to help you get started with Actions

name: Data Distribution

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          mkdir outputs
          ls
          echo $PWD

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          docker-compose -f "docker-compose.yml" up -d --build
          docker ps
      - name: Save log files from target 1 and target 2
        run: |
          docker ps
          docker cp cribl_target_1_1:/usr/src/events.log /home/runner/work/cribl/cribl/outputs/events_target_1.log
          docker cp cribl_target_2_1:/usr/src/events.log /home/runner/work/cribl/cribl/outputs/events_target_2.log
      
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: /home/runner/work/cribl/cribl/outputs/*
      
      - name: Remove containers after the run
        if: always()
        run: docker-compose -f "docker-compose.yml" down
  
  testing:
    needs: deployment
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - run: mkdir outputs
      - uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: /home/runner/work/cribl/cribl/outputs
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Test with Pytest
        run: |
          pytest -v --html=test_report.html
          
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: /home/runner/work/cribl/cribl/test_report.html
